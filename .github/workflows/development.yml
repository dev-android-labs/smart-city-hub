name: Android Build Release [Development]

on:
  push:
    branches: [ "development" ]

jobs:

  #  This is job1
  lint:
    name: Checking code using lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew


  #  This is job2
  package:
    name: Release Build
    needs: [ lint ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release Apk
        run: ./gradlew assembleRelease

      - name: Finding apk path
        id: apk-path
        run: |
          path=$(find **/build/outputs/apk/development/release -name '*.apk' -type f | head -1)
          echo "::set-output name=path::$path"

      - name: Extracting apk info
        id: apk-info
        uses: hkusu/apk-info-action@v1
        with:
          apk-path: ${{ steps.apk-path.outputs.path }}

      - name: Apk info
        run: |
          echo '${{ steps.apk-path.outputs.path }}'
          echo '${{ steps.apk-info.outputs.application-name }}'
          echo '${{ steps.apk-info.outputs.version-code }}'
          echo '${{ steps.apk-info.outputs.version-name }}'
          echo '${{ steps.apk-info.outputs.min-sdk-version }}'
          echo '${{ steps.apk-info.outputs.readable-file-size }}'

      #Creating Github Release & uploading apk to release
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.apk-info.outputs.version-name }}(${{ steps.apk-info.outputs.version-code }})
          release_name: v${{ steps.apk-info.outputs.version-name }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Github Release
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.apk-path.outputs.path }}
          asset_name: ${{ steps.apk-info.outputs.application-name }}-${{ steps.apk-info.outputs.version-name }}.apk
          asset_content_type: application/zip

      #Uploading Staging Release apk to artifact
      - name: Upload Apk to artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.apk-info.outputs.application-name }}-${{ steps.apk-info.outputs.version-name }}.apk
          path: app/build/outputs/apk/development/release/**.apk

      #Uploading Release apk to Firebase App Distribution
#      - name: Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1.5.0
#        with:
#          appId: ${{secrets.FIREBASE_APP_ID}}
#          token: ${{secrets.FIREBASE_TOKEN}}
#          groups: dynamis-tester
#          file: ${{ steps.apk-path.outputs.path }}


      # Upload to Drive
#      - name: Upload apk to Google Drive
#        uses: mathisve/gdrive-upload-action@main
#        with:
#          filename: app/build/outputs/apk/staging/release/app-staging-release.apk
#          name:
#          folderId: 11NQXdCHPj-Iy0F3Da_6Gcd2XbyMSGVf9
#          credentials: ${{ secrets.GDRIVE_CREDENTIALS }}
#          encoded: true





#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: Build with Gradle
#        run: ./gradlew build
#
#      - name: Upload Reports
#        uses: actions/upload-artifact@v3
#        with:
#          name: Test-Reports
#          path: app/build/reports
#        if: always()

